{
  "contractName": "CloneFactory",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/node_modules/@optionality.io/clone-factory/contracts/CloneFactory.sol\":\"CloneFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/node_modules/@optionality.io/clone-factory/contracts/CloneFactory.sol\":{\"keccak256\":\"0xee46821fb38af11c145f946b562266a8e51ca646c8dd69032848ee212d3c0e61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1b3270af4ce0e9d3c8a2ace4271a051f2ec37104e6b2b7a4bcdf9d48df392a\",\"dweb:/ipfs/QmV6MCEZJo1Dv1ZwgMmo2UMHGHjVkmfk6zYj4Yt1j1Yvge\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212200305dc74cdc42719e5a6f1997fe7c5653046b6e8b84bdcbe0139f592e230ea3864736f6c63430008130033",
  "deployedBytecode": "0x6080604052600080fdfea26469706673582212200305dc74cdc42719e5a6f1997fe7c5653046b6e8b84bdcbe0139f592e230ea3864736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "1223:1094:4:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1223:1094:4:-:0;;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/*\nThe MIT License (MIT)\n\nCopyright (c) 2018 Murray Software, LLC.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n//solhint-disable max-line-length\n//solhint-disable no-inline-assembly\n\ncontract CloneFactory {\n\n  function createClone(address target) internal returns (address result) {\n    bytes20 targetBytes = bytes20(target);\n    assembly {\n      let clone := mload(0x40)\n      mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n      mstore(add(clone, 0x14), targetBytes)\n      mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n      result := create(0, clone, 0x37)\n    }\n  }\n\n  function isClone(address target, address query) internal view returns (bool result) {\n    bytes20 targetBytes = bytes20(target);\n    assembly {\n      let clone := mload(0x40)\n      mstore(clone, 0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000)\n      mstore(add(clone, 0xa), targetBytes)\n      mstore(add(clone, 0x1e), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n\n      let other := add(clone, 0x40)\n      extcodecopy(query, other, 0, 0x2d)\n      result := and(\n        eq(mload(clone), mload(other)),\n        eq(mload(add(clone, 0xd)), mload(add(other, 0xd)))\n      )\n    }\n  }\n}\n",
  "sourcePath": "/home/liam/Liam/Uni/Magistrale/Blockchain/traceability-DHT/node_modules/@optionality.io/clone-factory/contracts/CloneFactory.sol",
  "ast": {
    "absolutePath": "project:/node_modules/@optionality.io/clone-factory/contracts/CloneFactory.sol",
    "exportedSymbols": {
      "CloneFactory": [
        442
      ]
    },
    "id": 443,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 407,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CloneFactory",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 442,
        "linearizedBaseContracts": [
          442
        ],
        "name": "CloneFactory",
        "nameLocation": "1232:12:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 422,
              "nodeType": "Block",
              "src": "1321:370:4",
              "statements": [
                {
                  "assignments": [
                    415
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 415,
                      "mutability": "mutable",
                      "name": "targetBytes",
                      "nameLocation": "1335:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 422,
                      "src": "1327:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes20",
                        "typeString": "bytes20"
                      },
                      "typeName": {
                        "id": 414,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "1327:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 420,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 418,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 409,
                        "src": "1357:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1349:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes20_$",
                        "typeString": "type(bytes20)"
                      },
                      "typeName": {
                        "id": 416,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "1349:7:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1349:15:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes20",
                      "typeString": "bytes20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1327:37:4"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1379:308:4",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1387:24:4",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1406:4:4",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1400:5:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1400:11:4"
                        },
                        "variables": [
                          {
                            "name": "clone",
                            "nodeType": "YulTypedName",
                            "src": "1391:5:4",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "1425:5:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1432:66:4",
                              "type": "",
                              "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1418:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1418:81:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1418:81:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "1517:5:4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1524:4:4",
                                  "type": "",
                                  "value": "0x14"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1513:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1513:16:4"
                            },
                            {
                              "name": "targetBytes",
                              "nodeType": "YulIdentifier",
                              "src": "1531:11:4"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1506:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1506:37:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1506:37:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "1561:5:4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1568:4:4",
                                  "type": "",
                                  "value": "0x28"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1557:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1557:16:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1575:66:4",
                              "type": "",
                              "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1550:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1550:92:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1550:92:4"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1649:32:4",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1666:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "1669:5:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1676:4:4",
                              "type": "",
                              "value": "0x37"
                            }
                          ],
                          "functionName": {
                            "name": "create",
                            "nodeType": "YulIdentifier",
                            "src": "1659:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1659:22:4"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "1649:6:4"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 412,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1649:6:4",
                      "valueSize": 1
                    },
                    {
                      "declaration": 415,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1531:11:4",
                      "valueSize": 1
                    }
                  ],
                  "id": 421,
                  "nodeType": "InlineAssembly",
                  "src": "1370:317:4"
                }
              ]
            },
            "id": 423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createClone",
            "nameLocation": "1259:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 409,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "1279:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 423,
                  "src": "1271:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1271:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1270:16:4"
            },
            "returnParameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 412,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1313:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 423,
                  "src": "1305:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1305:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1304:16:4"
            },
            "scope": 442,
            "src": "1250:441:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "1779:536:4",
              "statements": [
                {
                  "assignments": [
                    433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 433,
                      "mutability": "mutable",
                      "name": "targetBytes",
                      "nameLocation": "1793:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "1785:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes20",
                        "typeString": "bytes20"
                      },
                      "typeName": {
                        "id": 432,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "1785:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 438,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 436,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "1815:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1807:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes20_$",
                        "typeString": "type(bytes20)"
                      },
                      "typeName": {
                        "id": 434,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "1807:7:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1807:15:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes20",
                      "typeString": "bytes20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1785:37:4"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1837:474:4",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1845:24:4",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1864:4:4",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1858:5:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1858:11:4"
                        },
                        "variables": [
                          {
                            "name": "clone",
                            "nodeType": "YulTypedName",
                            "src": "1849:5:4",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "1883:5:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1890:66:4",
                              "type": "",
                              "value": "0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1876:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1876:81:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1876:81:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "1975:5:4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1982:3:4",
                                  "type": "",
                                  "value": "0xa"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1971:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1971:15:4"
                            },
                            {
                              "name": "targetBytes",
                              "nodeType": "YulIdentifier",
                              "src": "1988:11:4"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1964:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1964:36:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1964:36:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "2018:5:4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2025:4:4",
                                  "type": "",
                                  "value": "0x1e"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2014:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2014:16:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2032:66:4",
                              "type": "",
                              "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2007:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2007:92:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2007:92:4"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2107:29:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "2124:5:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2131:4:4",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2120:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2120:16:4"
                        },
                        "variables": [
                          {
                            "name": "other",
                            "nodeType": "YulTypedName",
                            "src": "2111:5:4",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "query",
                              "nodeType": "YulIdentifier",
                              "src": "2155:5:4"
                            },
                            {
                              "name": "other",
                              "nodeType": "YulIdentifier",
                              "src": "2162:5:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2169:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2172:4:4",
                              "type": "",
                              "value": "0x2d"
                            }
                          ],
                          "functionName": {
                            "name": "extcodecopy",
                            "nodeType": "YulIdentifier",
                            "src": "2143:11:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2143:34:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2143:34:4"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2184:121:4",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "clone",
                                      "nodeType": "YulIdentifier",
                                      "src": "2216:5:4"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "2210:5:4"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2210:12:4"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "other",
                                      "nodeType": "YulIdentifier",
                                      "src": "2230:5:4"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "2224:5:4"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2224:12:4"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "2207:2:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2207:30:4"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "clone",
                                          "nodeType": "YulIdentifier",
                                          "src": "2260:5:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2267:3:4",
                                          "type": "",
                                          "value": "0xd"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2256:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2256:15:4"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "2250:5:4"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2250:22:4"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "other",
                                          "nodeType": "YulIdentifier",
                                          "src": "2284:5:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2291:3:4",
                                          "type": "",
                                          "value": "0xd"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2280:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2280:15:4"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "2274:5:4"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2274:22:4"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "2247:2:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2247:50:4"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2194:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2194:111:4"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "2184:6:4"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 427,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2155:5:4",
                      "valueSize": 1
                    },
                    {
                      "declaration": 430,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2184:6:4",
                      "valueSize": 1
                    },
                    {
                      "declaration": 433,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1988:11:4",
                      "valueSize": 1
                    }
                  ],
                  "id": 439,
                  "nodeType": "InlineAssembly",
                  "src": "1828:483:4"
                }
              ]
            },
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isClone",
            "nameLocation": "1704:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "1720:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "1712:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1712:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 427,
                  "mutability": "mutable",
                  "name": "query",
                  "nameLocation": "1736:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "1728:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1728:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1711:31:4"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 430,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1771:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "1766:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 429,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1765:13:4"
            },
            "scope": 442,
            "src": "1695:620:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 443,
        "src": "1223:1094:4",
        "usedErrors": []
      }
    ],
    "src": "32:2286:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-05-22T17:15:15.243Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}